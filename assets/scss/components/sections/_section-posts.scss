@use "../../presets" as *;
@use "../../mixins" as *;

.posts {
  @include lg-min {
    padding-top: 100px;
    padding-bottom: 100px;
  }
  @include lg-md {
    padding-top: 80px;
    padding-bottom: 80px;
  }
  @include md {
    padding-top: 60px;
    padding-bottom: 60px;
  }
  &__actions {
    display: flex;
    justify-content: center;

    margin-top: $gap;
  }

  h2 {
    @extend %margin-top;
  }

  &__container {
    @extend %container;
  }

  &__grid {
    display: grid;

    gap: $gap;
    @include lg-min {
      grid-template-areas: "p1 p1 p2 p3" "p4 p5 p6 p6";
      grid-template-columns: repeat(4, 1fr);
    }
    @include lg-md {
      grid-template-areas: "p1 p1 p2" "p3 p4 p4" "p5 p5 p6";
      grid-template-columns: repeat(3, 1fr);
    }
    @include md-sm {
      grid-template-areas: "p1 p2" "p3 p4" "p5 p6";
      grid-template-columns: repeat(2, 1fr);
    }
    @include sm {
      grid-template-areas: "p1" "p2" "p3" "p4" "p5" "p6";
      grid-template-columns: 1fr;
    }
  }

  &-item {
    background-color: #f2f2f2;
    &__link {
      display: grid;
      overflow: hidden;

      height: 100%;

      background-color: #eeeeee;

      grid-template-rows: 300px 1fr;
    }

    &__image {
      display: flex;
      overflow: hidden;
      align-content: center;
      justify-content: center;

      background-color: #2d3651;

      object-fit: cover;
      img {
        width: 100%;

        transition: transform 0.5s;

        object-fit: cover;
      }
    }

    &__caption {
      display: grid;
      align-content: center;

      padding: 20px;

      h3 {
        text-align: center;

        color: $color-gray;

        font-family: $font-header;
      }

      p {
        transition: color 0.5s;
        text-align: center;
      }
    }
  }

  &-item a:hover {
    background-color: #d8d8d8;

    h3 {
      color: darken($color-gray, 20%);
    }

    p {
      color: darken($color-gray, 20%);
    }

    img {
      transform: scale(1.1);
    }
  }
}

@for $i from 1 through 6 {
  .posts-item:nth-of-type(#{$i}) {
    grid-area: p#{$i};
  }
}
